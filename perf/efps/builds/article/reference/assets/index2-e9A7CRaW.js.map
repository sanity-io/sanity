{"version":3,"file":"index2-e9A7CRaW.js","sources":["../../../../../../../../../../../private/var/folders/nf/jdthjt3n4sd01cj8pr9vkprc0000gp/T/sanity-latest/node_modules/sanity/src/structure/panes/list/ListPaneContent.tsx","../../../../../../../../../../../private/var/folders/nf/jdthjt3n4sd01cj8pr9vkprc0000gp/T/sanity-latest/node_modules/sanity/src/structure/panes/list/ListPaneHeader.tsx","../../../../../../../../../../../private/var/folders/nf/jdthjt3n4sd01cj8pr9vkprc0000gp/T/sanity-latest/node_modules/sanity/src/structure/panes/list/ListPane.tsx"],"sourcesContent":["import {Box, Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  CommandList,\n  type CommandListItemContext,\n  type GeneralPreviewLayoutKey,\n  useGetI18nText,\n  useI18nText,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {PaneContent, PaneItem, usePaneLayout} from '../../components'\nimport {type PaneListItem, type PaneListItemDivider} from '../../types'\n\ninterface ListPaneContentProps {\n  childItemId?: string\n  isActive?: boolean\n  items: (PaneListItem<unknown> | PaneListItemDivider)[] | undefined\n  layout?: GeneralPreviewLayoutKey\n  showIcons: boolean\n  title: string\n}\n\nconst DividerContainer = styled(Box)`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin: 0.75rem 0 0.25rem 0;\n`\n\nconst Divider = styled.hr`\n  flex: 1;\n  background-color: var(--card-border-color);\n  height: 1px;\n  margin: 0;\n  border: none;\n`\n\nconst DividerTitle = styled(Text)`\n  padding-bottom: 0.75rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n`\n\ninterface DividerItemProps {\n  item: PaneListItemDivider\n}\n\nfunction DividerItem({item}: DividerItemProps) {\n  const {title: dividerTitle} = useI18nText(item)\n  return (\n    <DividerContainer>\n      <DividerTitle weight=\"semibold\" muted size={1}>\n        {dividerTitle}\n      </DividerTitle>\n\n      <Divider />\n    </DividerContainer>\n  )\n}\n\n/**\n * @internal\n */\nexport function ListPaneContent(props: ListPaneContentProps) {\n  const {childItemId, items, isActive, layout, showIcons, title} = props\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const getI18nText = useGetI18nText(\n    items?.filter(\n      (item): item is Exclude<typeof item, {type: 'divider'}> => item.type !== 'divider',\n    ),\n  )\n\n  const getItemDisabled = useCallback(\n    (itemIndex: number) => {\n      return items?.find((_, i) => i === itemIndex)?.type === 'divider'\n    },\n    [items],\n  )\n\n  const shouldShowIconForItem = useCallback(\n    (item: PaneListItem): boolean => {\n      const itemShowIcon = item.displayOptions?.showIcon\n\n      // Specific true/false on item should have precedence over list setting\n      if (typeof itemShowIcon !== 'undefined') {\n        return itemShowIcon !== false // Boolean(item.icon)\n      }\n\n      // If no item setting is defined, defer to the pane settings\n      return showIcons !== false // Boolean(item.icon)\n    },\n    [showIcons],\n  )\n\n  const renderItem = useCallback(\n    (item: PaneListItem<unknown> | PaneListItemDivider, ctx: CommandListItemContext) => {\n      const {virtualIndex: itemIndex} = ctx\n\n      if (item.type === 'divider') {\n        return (\n          <Box key={`divider-${itemIndex}`} marginBottom={1}>\n            {item.title ? <DividerItem item={item} /> : <Divider />}\n          </Box>\n        )\n      }\n\n      const pressed = !isActive && childItemId === item.id\n      const selected = isActive && childItemId === item.id\n      // If this is a document list item, pass on the ID and type,\n      // otherwise leave it undefined to use the passed title and gang\n      const value =\n        item._id && item.schemaType\n          ? {_id: item._id, _type: item.schemaType.name, title: item.title}\n          : undefined\n\n      return (\n        <PaneItem\n          key={item.id}\n          icon={shouldShowIconForItem(item) ? item.icon : false}\n          id={item.id}\n          layout={layout}\n          marginBottom={1}\n          pressed={pressed}\n          schemaType={item.schemaType}\n          selected={selected}\n          title={getI18nText(item).title}\n          value={value}\n        />\n      )\n    },\n    [childItemId, getI18nText, isActive, layout, shouldShowIconForItem],\n  )\n\n  return (\n    <PaneContent overflow={layoutCollapsed ? 'hidden' : 'auto'}>\n      {items && items.length > 0 && (\n        <CommandList\n          activeItemDataAttr=\"data-hovered\"\n          ariaLabel={title}\n          canReceiveFocus\n          getItemDisabled={getItemDisabled}\n          itemHeight={51}\n          items={items}\n          onlyShowSelectionWhenActive\n          paddingBottom={1}\n          paddingX={3}\n          renderItem={renderItem}\n          wrapAround={false}\n        />\n      )}\n    </PaneContent>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\n\nimport {Button} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions, usePane} from '../../components'\nimport {type PaneMenuItem, type PaneMenuItemGroup} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface ListPaneHeaderProps {\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport const ListPaneHeader = ({index, menuItems, menuItemGroups, title}: ListPaneHeaderProps) => {\n  const {features} = useStructureTool()\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  return (\n    <PaneHeader\n      actions={<PaneHeaderActions menuItems={menuItems} menuItemGroups={menuItemGroups} />}\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      tabIndex={tabIndex}\n      title={title}\n    />\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {useI18nText} from 'sanity'\n\nimport {Pane} from '../../components'\nimport {_DEBUG} from '../../constants'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {ListPaneContent} from './ListPaneContent'\nimport {ListPaneHeader} from './ListPaneHeader'\n\ntype ListPaneProps = BaseStructureToolPaneProps<'list'>\n\n/**\n * @internal\n */\nexport function ListPane(props: ListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n\n  const {defaultLayout, displayOptions, items, menuItems, menuItemGroups} = pane\n  const showIcons = displayOptions?.showIcons !== false\n  const {title} = useI18nText(pane)\n\n  return (\n    <Pane\n      currentMaxWidth={350}\n      data-testid=\"structure-tool-list-pane\"\n      data-ui=\"ListPane\"\n      id={paneKey}\n      maxWidth={640}\n      minWidth={320}\n      selected={isSelected}\n    >\n      {_DEBUG && (\n        <Card padding={4} tone=\"transparent\">\n          <Code>{pane.source || '(none)'}</Code>\n        </Card>\n      )}\n\n      <ListPaneHeader\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <ListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        isActive={isActive}\n        items={items}\n        layout={defaultLayout}\n        showIcons={showIcons}\n        title={title}\n      />\n    </Pane>\n  )\n}\n"],"names":["DividerContainer","styled","Box","Divider","hr","DividerTitle","Text","DividerItem","t0","$","_c","item","title","dividerTitle","useI18nText","t1","t2","Symbol","for","jsx","t3","ListPaneContent","props","childItemId","items","isActive","layout","showIcons","collapsed","layoutCollapsed","usePaneLayout","filter","_temp","getI18nText","useGetI18nText","itemIndex","find","_","i","type","getItemDisabled","item_0","itemShowIcon","displayOptions","showIcon","shouldShowIconForItem","item_1","ctx","virtualIndex","itemIndex_0","pressed","id","selected","value","_id","schemaType","_type","name","undefined","PaneItem","icon","renderItem","t4","t5","length","CommandList","t6","PaneContent","ListPaneHeader","index","menuItems","menuItemGroups","features","useStructureTool","isLast","usePane","tabIndex","PaneHeaderActions","backButton","Button","BackLink","ArrowLeftIcon","content","PaneHeader","ListPane","isSelected","pane","paneKey","defaultLayout","source","_DEBUG","Pane"],"mappings":"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","x_google_ignoreList":[0,1,2]}