{"version":3,"file":"index-zhnrEtn1.js","sources":["../../../../../../../../../../../private/var/folders/nf/jdthjt3n4sd01cj8pr9vkprc0000gp/T/sanity-latest/node_modules/sanity/src/structure/panes/userComponent/UserComponentPaneContent.tsx","../../../../../../../../../../../private/var/folders/nf/jdthjt3n4sd01cj8pr9vkprc0000gp/T/sanity-latest/node_modules/sanity/src/structure/panes/userComponent/UserComponentPaneHeader.tsx","../../../../../../../../../../../private/var/folders/nf/jdthjt3n4sd01cj8pr9vkprc0000gp/T/sanity-latest/node_modules/sanity/src/structure/panes/userComponent/UserComponentPane.tsx"],"sourcesContent":["import {Box} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePane} from '../../components'\n\ninterface UserComponentPaneContentProps {\n  children: ReactNode\n}\n\nconst Root = styled(Box)`\n  position: relative;\n`\n\nexport function UserComponentPaneContent(props: UserComponentPaneContentProps) {\n  const {children} = props\n  const {collapsed} = usePane()\n\n  return (\n    <Root hidden={collapsed} height=\"fill\" overflow=\"auto\">\n      {children}\n    </Root>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\n\nimport {Button} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface UserComponentPaneHeaderProps {\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport function UserComponentPaneHeader(props: UserComponentPaneHeaderProps) {\n  const {actionHandlers, index, menuItems, menuItemGroups, title} = props\n  const {features} = useStructureTool()\n\n  if (!menuItems?.length && !title) {\n    return null\n  }\n\n  return (\n    <PaneHeader\n      actions={\n        <PaneHeaderActions\n          menuItems={menuItems}\n          menuItemGroups={menuItemGroups}\n          actionHandlers={actionHandlers}\n        />\n      }\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      title={title}\n    />\n  )\n}\n","import {isValidElement, useState} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {useI18nText} from 'sanity'\n\nimport {Pane} from '../../components'\nimport {type StructureToolPaneActionHandler} from '../../types'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {UserComponentPaneContent} from './UserComponentPaneContent'\nimport {UserComponentPaneHeader} from './UserComponentPaneHeader'\n\ntype UserComponentPaneProps = BaseStructureToolPaneProps<'component'>\n\n/**\n * @internal\n */\nexport function UserComponentPane(props: UserComponentPaneProps) {\n  const {index, pane, paneKey, ...restProps} = props\n  const {\n    child,\n    component: UserComponent,\n    menuItems,\n    menuItemGroups,\n    type: _unused,\n    ...restPane\n  } = pane\n  const [ref, setRef] = useState<{\n    actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  } | null>(null)\n  const {title = ''} = useI18nText(pane)\n\n  const {key, ...componentProps} = {...restProps, ...restPane}\n\n  return (\n    <Pane id={paneKey} minWidth={320} selected={restProps.isSelected}>\n      <UserComponentPaneHeader\n        actionHandlers={ref?.actionHandlers}\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <UserComponentPaneContent>\n        {isValidElementType(UserComponent) && (\n          <UserComponent\n            key={key}\n            {...componentProps}\n            // NOTE: here we're utilizing the function form of refs so setting\n            // the ref causes a re-render for `UserComponentPaneHeader`\n            ref={setRef as any}\n            child={child}\n            paneKey={paneKey}\n          />\n        )}\n        {isValidElement(UserComponent) && UserComponent}\n      </UserComponentPaneContent>\n    </Pane>\n  )\n}\n"],"names":["Root","styled","Box","UserComponentPaneContent","props","$","_c","children","collapsed","usePane","t0","UserComponentPaneHeader","actionHandlers","index","menuItems","menuItemGroups","title","features","useStructureTool","length","PaneHeaderActions","t1","backButton","jsx","Button","BackLink","ArrowLeftIcon","content","t2","PaneHeader","UserComponentPane","pane","paneKey","restProps","UserComponent","child","restPane","component","t3","type","_unused","t4","ref","setRef","useState","useI18nText","undefined","componentProps","key","isValidElementType","isValidElement","t5","jsxs","t6","isSelected","Pane"],"mappings":"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","x_google_ignoreList":[0,1,2]}