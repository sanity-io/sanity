{"version":3,"file":"stegaEncodeSourceMap-GpHWfJtg.js","sources":["../../../../../../node_modules/.pnpm/@sanity+client@7.9.0_debug@4.4.1/node_modules/@sanity/client/dist/_chunks-es/stegaEncodeSourceMap.js"],"sourcesContent":["import { isRecord, C } from \"./stegaClean.js\";\nconst reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/;\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction encodeIntoResult(result, csm, encoder) {\n  return walkMap(result, (value, path) => {\n    if (typeof value != \"string\")\n      return value;\n    const resolveMappingResult = resolveMapping(path, csm);\n    if (!resolveMappingResult)\n      return value;\n    const { mapping, matchedPath } = resolveMappingResult;\n    if (mapping.type !== \"value\" || mapping.source.type !== \"documentValue\")\n      return value;\n    const sourceDocument = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path], matchPathSegments = parseJsonPath(matchedPath), fullSourceSegments = parseJsonPath(sourcePath).concat(path.slice(matchPathSegments.length));\n    return encoder({\n      sourcePath: fullSourceSegments,\n      sourceDocument,\n      resultPath: path,\n      value\n    });\n  });\n}\nconst DRAFTS_FOLDER = \"drafts\", VERSION_FOLDER = \"versions\", PATH_SEPARATOR = \".\", DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`, VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`;\nfunction isDraftId(id) {\n  return id.startsWith(DRAFTS_PREFIX);\n}\nfunction isVersionId(id) {\n  return id.startsWith(VERSION_PREFIX);\n}\nfunction isPublishedId(id) {\n  return !isDraftId(id) && !isVersionId(id);\n}\nfunction getVersionFromId(id) {\n  if (!isVersionId(id)) return;\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR);\n  return versionId;\n}\nfunction getPublishedId(id) {\n  return isVersionId(id) ? id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) : isDraftId(id) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  if (workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), isPublishedId(_id))\n    searchParams.set(\"perspective\", \"published\");\n  else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id);\n    searchParams.set(\"perspective\", versionId);\n  }\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\nconst filterDefault = ({ sourcePath, resultPath, value }) => {\n  if (isValidDate(value) || isValidURL(value))\n    return !1;\n  const endPath = sourcePath.at(-1);\n  return !(sourcePath.at(-2) === \"slug\" && endPath === \"current\" || typeof endPath == \"string\" && (endPath.startsWith(\"_\") || endPath.endsWith(\"Id\")) || sourcePath.some(\n    (path) => path === \"meta\" || path === \"metadata\" || path === \"openGraph\" || path === \"seo\"\n  ) || hasTypeLike(sourcePath) || hasTypeLike(resultPath) || typeof endPath == \"string\" && denylist.has(endPath));\n}, denylist = /* @__PURE__ */ new Set([\n  \"color\",\n  \"colour\",\n  \"currency\",\n  \"email\",\n  \"format\",\n  \"gid\",\n  \"hex\",\n  \"href\",\n  \"hsl\",\n  \"hsla\",\n  \"icon\",\n  \"id\",\n  \"index\",\n  \"key\",\n  \"language\",\n  \"layout\",\n  \"link\",\n  \"linkAction\",\n  \"locale\",\n  \"lqip\",\n  \"page\",\n  \"path\",\n  \"ref\",\n  \"rgb\",\n  \"rgba\",\n  \"route\",\n  \"secret\",\n  \"slug\",\n  \"status\",\n  \"tag\",\n  \"template\",\n  \"theme\",\n  \"type\",\n  \"textTheme\",\n  \"unit\",\n  \"url\",\n  \"username\",\n  \"variant\",\n  \"website\"\n]);\nfunction isValidDate(dateString) {\n  return /^\\d{4}-\\d{2}-\\d{2}/.test(dateString) ? !!Date.parse(dateString) : !1;\n}\nconst allowedProtocols = /* @__PURE__ */ new Set([\n  \"app:\",\n  \"data:\",\n  \"discord:\",\n  \"file:\",\n  \"ftp:\",\n  \"ftps:\",\n  \"geo:\",\n  \"http:\",\n  \"https:\",\n  \"imap:\",\n  \"javascript:\",\n  \"magnet:\",\n  \"mailto:\",\n  \"maps:\",\n  \"ms-excel:\",\n  \"ms-powerpoint:\",\n  \"ms-word:\",\n  \"slack:\",\n  \"sms:\",\n  \"spotify:\",\n  \"steam:\",\n  \"teams:\",\n  \"tel:\",\n  \"vscode:\",\n  \"zoom:\"\n]);\nfunction isValidURL(url) {\n  try {\n    const { protocol } = new URL(url, url.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n    return allowedProtocols.has(protocol) || protocol.startsWith(\"web+\");\n  } catch {\n    return !1;\n  }\n}\nfunction hasTypeLike(path) {\n  return path.some((segment) => typeof segment == \"string\" && segment.match(/type/i) !== null);\n}\nconst TRUNCATE_LENGTH = 20;\nfunction stegaEncodeSourceMap(result, resultSourceMap, config) {\n  const { filter, logger, enabled } = config;\n  if (!enabled) {\n    const msg = \"config.enabled must be true, don't call this function otherwise\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  if (!resultSourceMap)\n    return logger?.error?.(\"[@sanity/client]: Missing Content Source Map from response body\", {\n      result,\n      resultSourceMap,\n      config\n    }), result;\n  if (!config.studioUrl) {\n    const msg = \"config.studioUrl must be defined\";\n    throw logger?.error?.(`[@sanity/client]: ${msg}`, { result, resultSourceMap, config }), new TypeError(msg);\n  }\n  const report = {\n    encoded: [],\n    skipped: []\n  }, resultWithStega = encodeIntoResult(\n    result,\n    resultSourceMap,\n    ({ sourcePath, sourceDocument, resultPath, value }) => {\n      if ((typeof filter == \"function\" ? filter({ sourcePath, resultPath, filterDefault, sourceDocument, value }) : filterDefault({ sourcePath, resultPath, value })) === !1)\n        return logger && report.skipped.push({\n          path: prettyPathForLogging(sourcePath),\n          value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n          length: value.length\n        }), value;\n      logger && report.encoded.push({\n        path: prettyPathForLogging(sourcePath),\n        value: `${value.slice(0, TRUNCATE_LENGTH)}${value.length > TRUNCATE_LENGTH ? \"...\" : \"\"}`,\n        length: value.length\n      });\n      const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n        typeof config.studioUrl == \"function\" ? config.studioUrl(sourceDocument) : config.studioUrl\n      );\n      if (!baseUrl) return value;\n      const { _id: id, _type: type, _projectId: projectId, _dataset: dataset } = sourceDocument;\n      return C(\n        value,\n        {\n          origin: \"sanity.io\",\n          href: createEditUrl({\n            baseUrl,\n            workspace,\n            tool,\n            id,\n            type,\n            path: sourcePath,\n            ...!config.omitCrossDatasetReferenceData && { dataset, projectId }\n          })\n        },\n        // We use custom logic to determine if we should skip encoding\n        !1\n      );\n    }\n  );\n  if (logger) {\n    const isSkipping = report.skipped.length, isEncoding = report.encoded.length;\n    if ((isSkipping || isEncoding) && ((logger?.groupCollapsed || logger.log)?.(\"[@sanity/client]: Encoding source map into result\"), logger.log?.(\n      `[@sanity/client]: Paths encoded: ${report.encoded.length}, skipped: ${report.skipped.length}`\n    )), report.encoded.length > 0 && (logger?.log?.(\"[@sanity/client]: Table of encoded paths\"), (logger?.table || logger.log)?.(report.encoded)), report.skipped.length > 0) {\n      const skipped = /* @__PURE__ */ new Set();\n      for (const { path } of report.skipped)\n        skipped.add(path.replace(reKeySegment, \"0\").replace(/\\[\\d+\\]/g, \"[]\"));\n      logger?.log?.(\"[@sanity/client]: List of skipped paths\", [...skipped.values()]);\n    }\n    (isSkipping || isEncoding) && logger?.groupEnd?.();\n  }\n  return resultWithStega;\n}\nfunction prettyPathForLogging(path) {\n  return toString(jsonPathToStudioPath(path));\n}\nvar stegaEncodeSourceMap$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  stegaEncodeSourceMap\n});\nexport {\n  encodeIntoResult,\n  stegaEncodeSourceMap,\n  stegaEncodeSourceMap$1\n};\n//# sourceMappingURL=stegaEncodeSourceMap.js.map\n"],"names":["reKeySegment","isKeySegment","segment","toString","path","target","i","segmentType","from","to","ESCAPE","UNESCAPE","jsonPath","match","parseJsonPath","parsed","parseRe","key","m","_key","jsonPathToStudioPath","jsonPathToMappingPath","resolveMapping","resultPath","csm","resultMappingPath","mappings","key1","key2","matchedPath","mapping","pathSuffix","isArray","value","walkMap","mappingFn","v","idx","isRecord","result","k","encodeIntoResult","encoder","resolveMappingResult","sourceDocument","sourcePath","matchPathSegments","fullSourceSegments","DRAFTS_FOLDER","VERSION_FOLDER","PATH_SEPARATOR","DRAFTS_PREFIX","VERSION_PREFIX","isDraftId","id","isVersionId","isPublishedId","getVersionFromId","_versionPrefix","versionId","_publishedId","getPublishedId","createEditUrl","options","baseUrl","_workspace","_tool","_id","type","projectId","dataset","workspace","tool","stringifiedPath","searchParams","segments","routerParams","resolveStudioBaseRoute","studioUrl","filterDefault","isValidDate","isValidURL","endPath","hasTypeLike","denylist","dateString","allowedProtocols","url","protocol","TRUNCATE_LENGTH","stegaEncodeSourceMap","resultSourceMap","config","filter","logger","enabled","msg","report","resultWithStega","prettyPathForLogging","C","isSkipping","isEncoding","skipped","stegaEncodeSourceMap$1"],"mappings":"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","x_google_ignoreList":[0]}