name: Unit tests

on:
  # Build on pushes branches that have a PR (including drafts)
  pull_request:
  # Build on commits pushed to branches without a PR if it's in the allowlist
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 60
    name: Test (${{ matrix.os }} / node ${{ matrix.node }})
    runs-on: ${{ matrix.os }}
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      # we want to know if a test fails on a specific node version
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node: [20, 22, 24]
        experimental: [false]
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
        # include:
        #   - os: windows-latest
        #     node: 16
        #     experimental: true

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if only examples files changed
        id: check_examples_only
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For PRs, check files changed in the PR
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          else
            # For pushes, check files in the last commit
            CHANGED_FILES=$(git diff --name-only HEAD~1)
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Check if all changed files are in examples/ directory
          EXAMPLES_ONLY="true"
          while IFS= read -r file; do
            if [[ ! "$file" =~ ^examples/ ]]; then
              EXAMPLES_ONLY="false"
              break
            fi
          done <<< "$CHANGED_FILES"

          echo "examples_only=$EXAMPLES_ONLY" >> $GITHUB_OUTPUT

      - name: Skip tests for examples-only changes
        if: steps.check_examples_only.outputs.examples_only == 'true'
        run: |
          echo "Only examples files changed, skipping unit tests"
          exit 0
      - uses: pnpm/action-setup@v4
        if: steps.check_examples_only.outputs.examples_only != 'true'
      - uses: actions/setup-node@v4
        if: steps.check_examples_only.outputs.examples_only != 'true'
        with:
          cache: pnpm
          node-version: ${{ matrix.node }}

      - name: Install project dependencies
        if: steps.check_examples_only.outputs.examples_only != 'true'
        run: pnpm install

      - name: Test
        if: steps.check_examples_only.outputs.examples_only != 'true'
        id: test
        run: |
          ARGS="--test-timeout=60000 --retry 4 --shard=${{ matrix.shardIndex}}/${{ matrix.shardTotal }}"
          if [ "${{ matrix.node }}" == "20" ]; then
            # We only gather coverage from a single Node version.
            # We pass in `--reporter=blob` so that we can combine the results from all shards.
            ARGS="$ARGS --coverage --reporter=default --reporter=blob"
          fi
          pnpm test:vitest $ARGS
        env:
          GITHUB_SHARD_IDENTIFIER: ${{ matrix.shardIndex }}-${{ matrix.shardTotal }}

      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() && matrix.node == '20' && steps.check_examples_only.outputs.examples_only != 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ github.run_id }}-${{ matrix.shardIndex }}
          path: ".vitest-reports/*"
          include-hidden-files: true
          retention-days: 1

  report-coverage:
    if: ${{ !cancelled() }}
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if only examples files changed
        id: check_examples_only
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For PRs, check files changed in the PR
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          else
            # For pushes, check files in the last commit
            CHANGED_FILES=$(git diff --name-only HEAD~1)
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Check if all changed files are in examples/ directory
          EXAMPLES_ONLY="true"
          while IFS= read -r file; do
            if [[ ! "$file" =~ ^examples/ ]]; then
              EXAMPLES_ONLY="false"
              break
            fi
          done <<< "$CHANGED_FILES"

          echo "examples_only=$EXAMPLES_ONLY" >> $GITHUB_OUTPUT

      - name: Skip coverage for examples-only changes
        if: steps.check_examples_only.outputs.examples_only == 'true'
        run: |
          echo "Only examples files changed, skipping coverage report"
          exit 0

      - uses: pnpm/action-setup@v4
        if: steps.check_examples_only.outputs.examples_only != 'true'
      - uses: actions/setup-node@v4
        if: steps.check_examples_only.outputs.examples_only != 'true'
        with:
          cache: pnpm
          node-version: lts/*

      - name: Install project dependencies
        if: steps.check_examples_only.outputs.examples_only != 'true'
        run: pnpm install

      - name: "Download coverage artifacts"
        if: steps.check_examples_only.outputs.examples_only != 'true'
        uses: actions/download-artifact@v4
        with:
          path: .vitest-reports
          pattern: blob-report-${{ github.run_id }}-*
          merge-multiple: true

      - name: Merged report
        if: steps.check_examples_only.outputs.examples_only != 'true'
        run: |
          pnpm vitest run --merge-reports --coverage

      - name: Report coverage
        if: steps.check_examples_only.outputs.examples_only != 'true'
        uses: davelosert/vitest-coverage-report-action@8ab049ff5a2c6e78f78af446329379b318544a1a # v2
