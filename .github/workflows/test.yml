name: Test

on:
  # Build on pushes branches that have a PR (including drafts)
  pull_request:
  # Build on commits pushed to branches without a PR if it's in the allowlist
  push:
    branches: [next, v3]

jobs:
  test:
    name: Test (${{ matrix.os }} / node ${{ matrix.node }})
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14, 16, 18]
        experimental: [false]
        # include:
        #   - os: windows-latest
        #     node: 16
        #     experimental: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ env.cache-name }}-
            ${{ runner.os }}-modules-
            ${{ runner.os }}-

      - name: Install project dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        env:
          # Keep the Cypress binary in ./node_modules/.cypress
          CYPRESS_CACHE_FOLDER: './node_modules/.cypress'
          CYPRESS_INSTALL_BINARY: '0'
          # PUPPETEER_SKIP_DOWNLOAD: 'true'
        run: yarn install

      - name: Check formatting
        run: yarn check:format

      - name: Check type system
        # If TypeScript project references is set up properly, `tsc --build` should work right after dependencies
        # has been installed, no extra build/compile step required
        id: typeCheckModules
        run: yarn type-check
        env:
          NODE_OPTIONS: --max_old_space_size=8192

      - name: Check for unused/missing dependencies
        id: depcheck
        run: yarn depcheck
        env:
          NODE_OPTIONS: --max_old_space_size=8192

      # (for puppeteer tests)
      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Test
        id: test
        run: |
          yarn build:cli # Needed for CLI tests
          yarn test
        env:
          SANITY_CI_CLI_AUTH_TOKEN: ${{ secrets.SANITY_CI_CLI_AUTH_TOKEN }}
