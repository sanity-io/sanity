name: End-to-End Tests
permissions:
  contents: read # for checkout
  pull-requests: write # for comment
on:
  # Build on pushes branches that have a PR (including drafts)
  pull_request:
  # Build on commits pushed to branches without a PR if it's in the allowlist
  push:
    branches: [next]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-cli:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*

      - name: Install project dependencies
        run: pnpm install

      - name: Build CLI
        # This warms up the turborepo remote cache
        run: pnpm build:cli --output-logs=full --log-order=grouped

  install:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: [build-cli]
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    strategy:
      fail-fast: false
      matrix:
        # Be sure to update all instances in this file and `pr-cleanup.yml` if updated, as well as github required checks
        project: [chromium, firefox]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*

      - name: Install project dependencies
        run: pnpm install

      - name: Store Playwright's Version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(npx playwright --version | sed 's/Version //')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "version=${PLAYWRIGHT_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ steps.playwright-version.outputs.version }}-playwright-browsers

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Build CLI
        # This should take only a few seconds as it'll restore the remote cache that got primed in the `install` job
        run: pnpm build:cli --output-logs=full --log-order=grouped

      - name: Cache E2E test studio on next
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/next' }}
        env:
          # Update the SANITY_E2E_SESSION_TOKEN on github to the new value once this is merged to next
          # Change the below to `secrets.SANITY_E2E_SESSION_TOKEN`
          # Delete `SANITY_E2E_SESSION_TOKEN_NEW` from github
          SANITY_E2E_SESSION_TOKEN: ${{ secrets.SANITY_E2E_SESSION_TOKEN_NEW }}
          SANITY_E2E_PROJECT_ID: ${{ vars.SANITY_E2E_PROJECT_ID }}
          SANITY_E2E_DATASET: ${{ vars.SANITY_E2E_DATASET }}
        run: pnpm e2e:setup && pnpm e2e:build

      - name: Cache E2E test studio on PR
        if: ${{ github.event_name == 'pull_request' }}
        env:
          # Update the SANITY_E2E_SESSION_TOKEN on github to the new value once this is merged to next
          # Change the below to `secrets.SANITY_E2E_SESSION_TOKEN`
          # Delete `SANITY_E2E_SESSION_TOKEN_NEW` from github
          SANITY_E2E_SESSION_TOKEN: ${{ secrets.SANITY_E2E_SESSION_TOKEN_NEW }}
          SANITY_E2E_PROJECT_ID: ${{ vars.SANITY_E2E_PROJECT_ID }}
          SANITY_E2E_DATASET: pr-${{ matrix.project }}-${{ github.event.number }}
        run: pnpm e2e:setup && pnpm e2e:build

  playwright-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: [install]
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    strategy:
      fail-fast: false
      matrix:
        # Be sure to update all instances in this file and `pr-cleanup.yml` if updated, as well as github required checks
        project: [chromium, firefox]
        # Add more shards here if needed, but remember that the github required checks will have to be updated as well
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*

      - name: Install project dependencies
        run: pnpm install

      - name: Store Playwright's Version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(npx playwright --version | sed 's/Version //')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "version=${PLAYWRIGHT_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ steps.playwright-version.outputs.version }}-playwright-browsers

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Run E2E tests on next
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/next' }}
        env:
          # Missing in docs but in use
          # here https://github.com/microsoft/playwright/blob/main/packages/playwright/src/reporters/blob.ts#L108
          PWTEST_BLOB_REPORT_NAME: ${{ matrix.project }}
          # Update the SANITY_E2E_SESSION_TOKEN on github to the new value once this is merged to next
          # Change the below to `secrets.SANITY_E2E_SESSION_TOKEN`
          # Delete `SANITY_E2E_SESSION_TOKEN_NEW` from github
          SANITY_E2E_SESSION_TOKEN: ${{ secrets.SANITY_E2E_SESSION_TOKEN_NEW }}
          SANITY_E2E_PROJECT_ID: ${{ vars.SANITY_E2E_PROJECT_ID }}
          SANITY_E2E_DATASET: ${{ vars.SANITY_E2E_DATASET }}
        # As e2e:build ran in the `install` job, turbopack restores it from cache here
        run: pnpm e2e:build && pnpm test:e2e --project ${{ matrix.project }} --shard ${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Run E2E tests on PR
        if: ${{ github.event_name == 'pull_request' }}
        env:
          # Missing in docs but in use
          # here https://github.com/microsoft/playwright/blob/main/packages/playwright/src/reporters/blob.ts#L108
          PWTEST_BLOB_REPORT_NAME: ${{ matrix.project }}
          # Update the SANITY_E2E_SESSION_TOKEN on github to the new value once this is merged to next
          # Change the below to `secrets.SANITY_E2E_SESSION_TOKEN`
          # Delete `SANITY_E2E_SESSION_TOKEN_NEW` from github
          SANITY_E2E_SESSION_TOKEN: ${{ secrets.SANITY_E2E_SESSION_TOKEN_NEW }}
          SANITY_E2E_PROJECT_ID: ${{ vars.SANITY_E2E_PROJECT_ID }}
          SANITY_E2E_DATASET: pr-${{ matrix.project }}-${{ github.event.number }}
        # As e2e:build ran in the `install` job, turbopack restores it from cache here
        run: pnpm e2e:build && pnpm test:e2e --project ${{ matrix.project }} --shard ${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.project }}-${{ matrix.shardIndex }}
          path: |
            blob-report
            test-results
          retention-days: 30

  merge-reports:
    if: always()
    needs: [playwright-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*

      - name: Install project dependencies
        run: pnpm install

      - name: Download blob reports from Github Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          merge-multiple: true
          path: all-blob-reports

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html all-blob-reports/blob-report

      - name: Upload HTML report
        id: upload-playwright-report
        uses: actions/upload-artifact@v4
        with:
          name: full-html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 30

      - name: Extract artifact URL
        id: artifact-url
        if: ${{ always() && steps.upload-playwright-report.conclusion == 'success' && github.event_name == 'pull_request' }}
        run: |
          URL=$(echo "${{ steps.upload-playwright-report.outputs.artifact-url }}")
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Add PR Comment with Report Link
        uses: thollander/actions-comment-pull-request@fabd468d3a1a0b97feee5f6b9e499eab0dd903f6 # v2
        if: ${{ always() && steps.upload-playwright-report.conclusion == 'success' && github.event_name == 'pull_request' }}
        with:
          comment_tag: "playwright-e2e-report"
          message: |
            ### ðŸ“Š Playwright Test Report

            **[Download Full E2E Report](${{ steps.artifact-url.outputs.url }})**

            This report contains test results, including videos of failing tests.
