name: Create Release PR

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  create-or-update-pr:
    # this runs in main, and we want to skip running it when release PRs are merged
    # format of the commit message is specified in lerna.json
    if: >
      !startsWith(github.event.head_commit.message, 'chore(release): publish')
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write

    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*

      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.ECOSPARK_APP_ID }}
          private-key: ${{ secrets.ECOSPARK_APP_PRIVATE_KEY }}

      - name: Install deps & build
        run: pnpm install --ignore-scripts

      - name: Build
        run: pnpm build --output-logs=full --log-order=grouped

      - name: Configure git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Update version
        run: |
          npx lerna version \
            --force-publish \
            --no-git-tag-version \
            --conventional-commits \
            --yes
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Fix lerna.json EOF formatting
        # lerna version formats lerna.json removing EOF line
        # this is needed to pass linter
        run: npx prettier --write lerna.json

      - name: Sync workspace lockfile
        run: pnpm install --lockfile-only

      - name: Get version commit message
        # generate the commit message that would be created (determined by lerna.json)
        id: version-commit
        run: |
          VERSION=$(cat lerna.json | jq -r .version)
          echo "message=chore(release): publish v$VERSION" >> $GITHUB_OUTPUT

      - name: Get version
        id: release-as
        run: echo "version=$(cat lerna.json | jq -r .version)" >> $GITHUB_OUTPUT
      - name: Create or update PR
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7
        id: create-pull-request
        with:
          token: ${{ steps.app-token.outputs.token }}
          title: "${{steps.version-commit.outputs.message}}"
          body: "ğŸ¤– I have created a release **squib** **squob**\n\n Merging this PR will publish v${{steps.release-as.outputs.version}} to npm ğŸš€"
          commit-message: "${{steps.version-commit.outputs.message}}"
          branch: ci/release-main
          sign-commits: true
          base: main
          team-reviewers: "@sanity-io/studio"
          draft: false
