name: eFPS Test
on:
  pull_request:
  workflow_dispatch:
    inputs:
      reference_tag:
        description: "npm reference tag for comparison"
        required: true
        default: "latest"
      enable_profiler:
        description: "Enable profiler"
        required: true
        type: boolean
        default: false
      record_video:
        description: "Record video"
        required: true
        type: boolean
        default: false

jobs:
  efps:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-${{ runner.os }}-pnpm-store-${{ env.cache-name }}-
            v1-${{ runner.os }}-pnpm-store-
            v1-${{ runner.os }}-

      - name: Install project dependencies
        run: pnpm install

      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(npx playwright --version | sed 's/Version //')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Run eFPS tests
        env:
          VITE_PERF_EFPS_PROJECT_ID: ${{ vars.PERF_EFPS_PROJECT_ID }}
          VITE_PERF_EFPS_DATASET: ${{ vars.PERF_EFPS_DATASET }}
          PERF_EFPS_SANITY_TOKEN: ${{ secrets.PERF_EFPS_SANITY_TOKEN }}
          REFERENCE_TAG: ${{ github.event.inputs.reference_tag || 'latest' }}
          ENABLE_PROFILER: ${{ github.event.inputs.enable_profiler || false }}
          RECORD_VIDEO: ${{ github.event.inputs.record_video || false }}
        run: pnpm efps:test

      - name: PR comment with report
        uses: thollander/actions-comment-pull-request@fabd468d3a1a0b97feee5f6b9e499eab0dd903f6 # v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          comment_tag: "efps-report"
          filePath: ${{ github.workspace }}/perf/efps/results/benchmark-results.md

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: efps-report
          path: perf/efps/results
          retention-days: 30
