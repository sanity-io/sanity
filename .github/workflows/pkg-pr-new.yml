name: Publish Pull Requests with pkg.pr.new

permissions:
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, labeled]

jobs:
  publish:
    if: >
      github.repository == 'sanity-io/sanity' &&
      (github.event_name == 'push' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'trigger: preview')))

    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*

      - name: Install project dependencies
        run: pnpm install

      - id: pre-flight
        run: |
          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          PACKAGES=$(pnpx tsx scripts/listPublishedPackages.ts)
          echo "packages=${PACKAGES}" >> "$GITHUB_OUTPUT"
          VERSION="$(jq -r .version lerna.json)-pr.$PR_NUMBER+$(git rev-parse --short HEAD)"
          echo "process.env.PKG_VERSION will be set to ${VERSION} when building"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - run: pnpm build
        env:
          # Makes sure the right version is set in packages/sanity/src/core/version.ts
          # Note that version fields in package.json for all packages will be unchanged
          PKG_VERSION: ${{ steps.pre-flight.outputs.version }}

      - run: |
          echo "Publishing to pkg.pr.new: ${{ steps.pre-flight.outputs.packages }}"
          pnpx pkg-pr-new publish --pnpm --no-template ${{ steps.pre-flight.outputs.packages }}
