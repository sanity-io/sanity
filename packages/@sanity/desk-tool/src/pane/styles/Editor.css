@import 'part:@sanity/base/theme/variables-style';

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.root {
  display: block;
  background-color: var(--body-bg);
  position: relative; /* Needed to keep the spinners in place */

  @media (--screen-medium) {
    background-color: transparent;
    height: 100%;
  }
}

.loading {
  min-height: 100%;
}

.menuItem {
  display: inline-flex;
  justify-content: space-between;
  width: stretch;
}

.hotkey {
  color: inherit;
  font-size: 0.8em;
  margin-left: 0.6em;
  padding-right: 1em;
  opacity: 0.5;
}

.top {
  margin: 0 var(--medium-padding);
  color: var(--text-color-secondary);
}

.date {
  font-size: 0.75em;
}

.publishedDate {
  composes: date;
}

.editedDate {
  composes: date;
}

.publishInfo {
  display: grid;
  padding: var(--small-padding) var(--medium-padding);
  box-sizing: border-box;
  color: var(--text-color-secondary);
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  background-color: var(--body-bg);
  z-index: var(--zindex-pane);
  transform: translateY(0);
  transition: transform 0.3s ease-in, box-shadow 0.2s ease-in;
  grid-template-areas: "publishButton publishInfoUndoButton";
  grid-template-columns: auto auto;
  grid-template-rows: 2.5em;
  justify-content: stretch;
  align-items: center;
  font-size: 1rem;
  grid-gap: 0.5em;
  box-shadow: 0 0 2px color(var(--shadow-base) a(20%));

  @media (--screen-medium) {
    position: absolute;
    grid-template-columns: 6em 6em;
  }
}

.publishInfoHidden {
  composes: publishInfo;
  transform: translateY(100%);
  box-shadow: 0 0 0 var(--shadow-base);
}

.publishButton {
  grid-area: publishButton;
  justify-self: stretch;

  @nest & > * {
    display: flex;
    width: 100%;
  }
}

.publishInfoUndoButton {
  position: relative;
  grid-area: publishInfoUndoButton;

  @nest & > * {
    display: flex;
    width: 100%;
  }
}

.popOverText {
  margin-bottom: 1em;
}

.errors {
  margin-left: 1rem;
  color: var(--state-danger-color);
}

.warnings {
  margin-left: 1rem;
  color: var(--state-warning-color);
}

.editor {
  padding: var(--medium-padding);
  max-width: 40em;
  padding-bottom: 8rem;
}

.syncStatus {
  display: block;
  opacity: 1;
  min-width: 4rem;
  margin-right: 1em;
  font-size: var(--font-size-xsmall);
}

.syncStatusSynced {
  composes: syncStatus;
}

.syncStatusReconnecting {
  composes: syncStatus;
  color: var(--state-danger-color);
}

.syncStatusSyncing {
  composes: syncStatus;
  color: var(--state-success-color);
}

.overlay {
  position: absolute;
  background-color: rgba(255, 255, 255, 0.8);
  height: 100%;
  width: 100%;
  z-index: 200;
}

.typeMisMatchMessage {
  padding: 10em 3em;
}

.paneFunctions {
  display: flex;
  flex-wrap: nowrap;
  align-items: stretch;
  padding-right: 0;

  @media (--screen-medium) {
    font-size: 1em;
  }
}

.syncSpinnerContainer {
  display: flex;
  position: relative;
  align-items: center;
}

.syncSpinner {
  display: block;

  @nest & > svg {
    display: block;
    transform-origin: center center;
    animation-name: spin;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  }
}

.spinnerContainer {
  background: var(--body-bg);
  top: 0;
  left: 0;
  width: 100%;
  z-index: 3;
  height: 100vh;

  @media (--screen-medium) {
    height: calc(100vh - 6rem); /* 6rem is aprox the height of the header stuff */
  }
}
