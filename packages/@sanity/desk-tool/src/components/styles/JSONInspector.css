/**
 * react-json-inspector unfortunately doesn't let us specify class names,
 * so there is no way to use CSS modules without forking the entire project.
 * as for now, we'll have to make du ewith global selectors, prefixing the
 * selectors in order to *hopefully* avoid collisions
 */
:global .json-inspector .json-inspector,
:global .json-inspector .json-inspector__selection {
  font: 14px/1.4 Consolas, monospace;
  background: whitesmoke;
}

:global .json-inspector .json-inspector__leaf {
  padding-left: 18px;
}

:global .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {
  display: none;
}

/* Highlight each document when hovering */
:global .json-inspector .json-inspector__leaf_root > .json-inspector__leaf:hover {
  background: rgba(0, 0, 0, 0.05);
}

:global .json-inspector .json-inspector__leaf_root > .json-inspector__leaf:nth-child(even) {
  background: rgba(0, 0, 0, 0.025);
}

:global .json-inspector .json-inspector__leaf_root > .json-inspector__leaf {
  margin-bottom: 0.2em;
}

:global .json-inspector .json-inspector__line {
  display: block;
  position: relative;
  cursor: default;
}

:global .json-inspector .json-inspector__line::after {
  content: '';
  position: absolute;
  top: 0;
  left: -200px;
  right: -50px;
  bottom: 0;
  z-index: -1;
  pointer-events: none;
}

:global .json-inspector .json-inspector__line:hover::after {
  background: rgba(0, 0, 0, 0.06);
}

:global .json-inspector .json-inspector__leaf_composite > .json-inspector__line {
  cursor: pointer;
}

:global .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {
  content: '▷ ';
  color: #bbb;
  margin-left: -18px;
  font-size: 90%;
}

:global .json-inspector .json-inspector__leaf_expanded.json-inspector__leaf_composite > .json-inspector__line::before {
  color: #999;
  content: '▽ ';
  font-size: 90%;
}

:global .json-inspector .json-inspector__radio,
:global .json-inspector .json-inspector__flatpath {
  display: none;
}

:global .json-inspector .json-inspector__value {
  margin-left: 5px;
}

:global .json-inspector .json-inspector__search {
  min-width: 300px;
  margin: 0 10px 10px 0;
  padding: 2px;
}

:global .json-inspector .json-inspector__key {
  color: #505050;
}

:global .json-inspector .json-inspector__value_helper,
:global .json-inspector .json-inspector__value_null,
:global .json-inspector .json-inspector__not-found {
  color: #b0b0b0;
}

:global .json-inspector .json-inspector__value_string {
  color: #75921a;
}

:global .json-inspector .json-inspector__value_boolean {
  color: #008fd8;
}

:global .json-inspector .json-inspector__value_number {
  color: #dc6c40;
}

:global .json-inspector .json-inspector__hl {
  background: #ff0;
  box-shadow: 0 -1px 0 2px #ff0;
  border-radius: 2px;
}

:global .json-inspector .json-inspector__show-original {
  display: inline-block;
  padding: 0 6px;
  color: #666;
  cursor: pointer;
}

:global .json-inspector .json-inspector__show-original:hover {
  color: #111;
}

:global .json-inspector .json-inspector__show-original::before {
  content: '⥂';
}

:global .json-inspector .json-inspector__show-original:hover::after {
  content: ' expand';
}
