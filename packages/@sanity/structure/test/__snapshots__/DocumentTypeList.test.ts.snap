// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`builds document type lists through setters (alt order #2) 1`] = `
Object {
  "canHandleIntent": [Function],
  "child": [Function],
  "defaultLayout": undefined,
  "displayOptions": Object {
    "showIcons": true,
  },
  "id": "authors",
  "initialValueTemplates": Array [],
  "menuItemGroups": Array [
    Object {
      "id": "sorting",
      "title": "Sort",
    },
    Object {
      "id": "layout",
      "title": "Layout",
    },
    Object {
      "id": "actions",
      "title": "Actions",
    },
  ],
  "menuItems": Array [
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_updatedAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Last edited",
    },
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_createdAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Created",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "default",
      },
      "title": "Compact view",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "detail",
      },
      "title": "Detailed view",
    },
  ],
  "options": Object {
    "apiVersion": "2021-06-07",
    "defaultOrdering": Array [
      Object {
        "direction": "desc",
        "field": "title",
      },
    ],
    "filter": "_type == $type",
    "params": Object {
      "type": "author",
    },
  },
  "schemaTypeName": "author",
  "title": "authors",
  "type": "documentList",
}
`;

exports[`builds document type lists through setters (alt order) 1`] = `
Object {
  "canHandleIntent": [Function],
  "child": [Function],
  "defaultLayout": undefined,
  "displayOptions": Object {
    "showIcons": true,
  },
  "id": "authors",
  "initialValueTemplates": Array [],
  "menuItemGroups": Array [
    Object {
      "id": "sorting",
      "title": "Sort",
    },
    Object {
      "id": "layout",
      "title": "Layout",
    },
    Object {
      "id": "actions",
      "title": "Actions",
    },
  ],
  "menuItems": Array [
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_updatedAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Last edited",
    },
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_createdAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Created",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "default",
      },
      "title": "Compact view",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "detail",
      },
      "title": "Detailed view",
    },
  ],
  "options": Object {
    "apiVersion": "2021-06-07",
    "defaultOrdering": Array [
      Object {
        "direction": "desc",
        "field": "title",
      },
    ],
    "filter": "_type == $type",
    "params": Object {
      "type": "author",
    },
  },
  "schemaTypeName": "author",
  "title": "authors",
  "type": "documentList",
}
`;

exports[`builds document type lists through setters 1`] = `
Object {
  "canHandleIntent": [Function],
  "child": [Function],
  "defaultLayout": "card",
  "displayOptions": Object {
    "showIcons": true,
  },
  "id": "authors",
  "initialValueTemplates": Array [],
  "menuItemGroups": Array [
    Object {
      "id": "sorting",
      "title": "Sort",
    },
    Object {
      "id": "layout",
      "title": "Layout",
    },
    Object {
      "id": "actions",
      "title": "Actions",
    },
  ],
  "menuItems": Array [
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_updatedAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Last edited",
    },
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_createdAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Created",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "default",
      },
      "title": "Compact view",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "detail",
      },
      "title": "Detailed view",
    },
  ],
  "options": Object {
    "apiVersion": "2021-06-07",
    "defaultOrdering": Array [
      Object {
        "direction": "asc",
        "field": "title",
      },
    ],
    "filter": "_type == $type",
    "params": Object {
      "type": "author",
    },
  },
  "schemaTypeName": "author",
  "title": "authors",
  "type": "documentList",
}
`;

exports[`builds document type lists with only required properties 1`] = `
Object {
  "canHandleIntent": [Function],
  "child": [Function],
  "defaultLayout": undefined,
  "displayOptions": Object {
    "showIcons": true,
  },
  "id": "custom-id",
  "initialValueTemplates": Array [],
  "menuItemGroups": Array [
    Object {
      "id": "sorting",
      "title": "Sort",
    },
    Object {
      "id": "layout",
      "title": "Layout",
    },
    Object {
      "id": "actions",
      "title": "Actions",
    },
  ],
  "menuItems": Array [
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_updatedAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Last edited",
    },
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_createdAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Created",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "default",
      },
      "title": "Compact view",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "detail",
      },
      "title": "Detailed view",
    },
  ],
  "options": Object {
    "apiVersion": "2021-06-07",
    "defaultOrdering": Array [
      Object {
        "direction": "desc",
        "field": "_updatedAt",
      },
    ],
    "filter": "_type == $type",
    "params": Object {
      "type": "author",
    },
  },
  "schemaTypeName": "author",
  "title": "Custom author title",
  "type": "documentList",
}
`;

exports[`builds document type lists with schema type as string 1`] = `
Object {
  "canHandleIntent": [Function],
  "child": [Function],
  "defaultLayout": undefined,
  "displayOptions": Object {
    "showIcons": true,
  },
  "id": "author",
  "initialValueTemplates": Array [],
  "menuItemGroups": Array [
    Object {
      "id": "sorting",
      "title": "Sort",
    },
    Object {
      "id": "layout",
      "title": "Layout",
    },
    Object {
      "id": "actions",
      "title": "Actions",
    },
  ],
  "menuItems": Array [
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_updatedAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Last edited",
    },
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_createdAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Created",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "default",
      },
      "title": "Compact view",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "detail",
      },
      "title": "Detailed view",
    },
  ],
  "options": Object {
    "apiVersion": "2021-06-07",
    "defaultOrdering": Array [
      Object {
        "direction": "desc",
        "field": "_updatedAt",
      },
    ],
    "filter": "_type == $type",
    "params": Object {
      "type": "author",
    },
  },
  "schemaTypeName": "author",
  "title": "Author",
  "type": "documentList",
}
`;

exports[`builds document type lists with schema type instance 1`] = `
Object {
  "canHandleIntent": [Function],
  "child": [Function],
  "defaultLayout": undefined,
  "displayOptions": Object {
    "showIcons": true,
  },
  "id": "author",
  "initialValueTemplates": Array [],
  "menuItemGroups": Array [
    Object {
      "id": "sorting",
      "title": "Sort",
    },
    Object {
      "id": "layout",
      "title": "Layout",
    },
    Object {
      "id": "actions",
      "title": "Actions",
    },
  ],
  "menuItems": Array [
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_updatedAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Last edited",
    },
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_createdAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Created",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "default",
      },
      "title": "Compact view",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "detail",
      },
      "title": "Detailed view",
    },
  ],
  "options": Object {
    "apiVersion": "2021-06-07",
    "defaultOrdering": Array [
      Object {
        "direction": "desc",
        "field": "_updatedAt",
      },
    ],
    "filter": "_type == $type",
    "params": Object {
      "type": "author",
    },
  },
  "schemaTypeName": "author",
  "title": "Author",
  "type": "documentList",
}
`;

exports[`builds document type lists with schema type name + schema 1`] = `
Object {
  "canHandleIntent": [Function],
  "child": [Function],
  "defaultLayout": undefined,
  "displayOptions": Object {
    "showIcons": true,
  },
  "id": "author",
  "initialValueTemplates": Array [],
  "menuItemGroups": Array [
    Object {
      "id": "sorting",
      "title": "Sort",
    },
    Object {
      "id": "layout",
      "title": "Layout",
    },
    Object {
      "id": "actions",
      "title": "Actions",
    },
  ],
  "menuItems": Array [
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_updatedAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Last edited",
    },
    Object {
      "action": "setSortOrder",
      "group": "sorting",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "by": Array [
          Object {
            "direction": "desc",
            "field": "_createdAt",
          },
        ],
        "extendedProjection": "",
      },
      "title": "Sort by Created",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "default",
      },
      "title": "Compact view",
    },
    Object {
      "action": "setLayout",
      "group": "layout",
      "icon": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "params": Object {
        "layout": "detail",
      },
      "title": "Detailed view",
    },
  ],
  "options": Object {
    "apiVersion": "2021-06-07",
    "defaultOrdering": Array [
      Object {
        "direction": "desc",
        "field": "_updatedAt",
      },
    ],
    "filter": "_type == $type",
    "params": Object {
      "type": "author",
    },
  },
  "schemaTypeName": "author",
  "title": "Author",
  "type": "documentList",
}
`;

exports[`throws if no filter is set 1`] = `"\`filter\` is required for document lists"`;
