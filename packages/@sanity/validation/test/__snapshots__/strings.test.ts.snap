// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`string custom async rule with string: not a palindrome 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be a palindrome!",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string custom rule with string: not a palindrome 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be a palindrome!",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string exact length constraint: exact length: too long 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be exactly 5 characters long",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string exact length constraint: exact length: too short 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be exactly 5 characters long",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string exact length constraint: exact length: valid 1`] = `Array []`;

exports[`string lowercase constraint: lowercase: all uppercase 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be all lowercase letters",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string lowercase constraint: lowercase: locale characters 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be all lowercase letters",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string lowercase constraint: lowercase: some uppercase 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be all lowercase letters",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string lowercase constraint: lowercase: valid 1`] = `Array []`;

exports[`string max length constraint: max length: too long 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be at most 5 characters long",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string max length constraint: max length: valid 1`] = `Array []`;

exports[`string min length constraint: min length: too short 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be at least 2 characters long",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string min length constraint: min length: valid 1`] = `Array []`;

exports[`string regex constraint (custom pattern name): regex: match w/ custom pattern name 1`] = `Array []`;

exports[`string regex constraint (custom pattern name): regex: non-match w/ custom pattern name 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Does not match PascalCase-pattern",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string regex constraint (custom pattern name, as options): regex: match w/ custom pattern name (opt) 1`] = `Array []`;

exports[`string regex constraint (custom pattern name, as options): regex: non-match w/ custom pattern name (opt) 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Does not match PascalCase-pattern",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string regex constraint (inverted): regex: inverted match 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Should not match \\"/^[A-Z][a-z]+$/\\"-pattern",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string regex constraint (inverted): regex: inverted non-match 1`] = `Array []`;

exports[`string regex constraint: regex: match 1`] = `Array []`;

exports[`string regex constraint: regex: non-match 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Does not match \\"/^[A-Z][a-z]+$/\\"-pattern",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string required constraint: required: empty string 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Required",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string required constraint: required: null 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Expected type \\"String\\", got \\"null\\"",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Required",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string required constraint: required: undefined 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Required",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string required constraint: required: valid 1`] = `Array []`;

exports[`string uppercase constraint: uppercase: all lowercase 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be all uppercase letters",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string uppercase constraint: uppercase: locale characters 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be all uppercase letters",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string uppercase constraint: uppercase: some lowercase 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be all uppercase letters",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string uppercase constraint: uppercase: some lowercase 2`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Must be all uppercase letters",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string uppercase constraint: uppercase: valid 1`] = `Array []`;

exports[`string uri constraint (credentials): uri: credentials specified but not allowed 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Username/password not allowed",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string uri constraint (credentials): uri: username specified but not allowed 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Username/password not allowed",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string uri constraint (invalid protocol): uri: protocol non-match 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Does not match allowed protocols/schemes",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string uri constraint (with unicode chars): uri: non-match 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Not a valid URL",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;

exports[`string uri constraint: uri: non-match 1`] = `
Array [
  Object {
    "item": ValidationError {
      "children": undefined,
      "message": "Not a valid URL",
      "operation": undefined,
      "paths": Array [],
    },
    "level": "error",
    "path": Array [],
    "type": "validation",
  },
]
`;
