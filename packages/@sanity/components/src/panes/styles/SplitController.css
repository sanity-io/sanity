@import 'part:@sanity/base/theme/variables-style';

.root {
  @media (--screen-medium) {
    display: flex;
    height: 100%;
  }

  @nest & :global(.Pane1) {
    background-color: inherit;
    transition: width 200ms linear;
  }
}

.vertical {
  composes: root;
}

.splitPane {
  display: block;
}

.splitWrapper {
  display: block;
}

.splitWrapperResizing {
  composes: splitWrapper;

  @nest & :global(.Pane1) {
    transition: unset !important;
  }
}

.singleWrapper {
  /*
    This is to keep the DOM-tree in the same structure
    to avoide a re-render of the dom and to fill the entire width
  */
  @nest & :global(.Pane1) {
    max-width: 100% !important;
    flex: 1 !important;
  }

  @nest & :global(.Pane2) {
    display: none;
  }

  @nest & .Resizer {
    display: none;
  }
}

.Resizer {
  background: var(--gray-darker);
  opacity: 0.1;
  z-index: 10;
  box-sizing: border-box;
  background-clip: padding-box;

  @nest &:hover {
    opacity: 0.2;
    transition: border 200ms ease, opacity 100ms ease;
  }

  @nest .vertical & {
    width: 11px;
    margin: 0 -5px;
    border-left: 5px solid color(var(--component-border-color) a(0%));
    border-right: 5px solid color(var(--component-border-color) a(0%));
    cursor: col-resize;

    @nest &:hover {
      border-left: 5px solid color(var(--component-border-color) a(25%));
      border-right: 5px solid color(var(--component-border-color) a(25%));
    }
  }

  @nest .disabled & {
    cursor: not-allowed;

    @nest &:hover {
      border-color: transparent;
    }
  }
}

.ResizerIsCollapsed {
  composes: Resizer;
  display: none;
  pointer-events: none;
}

.lastPane .Resizer {
  display: none;
}

.hideResize > .splitPane > .Resizer {
  display: none;
}
