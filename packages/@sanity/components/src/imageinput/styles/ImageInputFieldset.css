@import 'part:@sanity/base/theme/variables-style';

@keyframes complete {
  0% {
    opacity: 100;
  }

  90% {
    opacity: 0;
  }

  100% {
    opacity: 0;
    display: none;
  }
}

.grid {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;

  @nest .level1 & {
    margin: calc(var(--medium-padding) * -1) !important;
  }

  @media (--screen-medium) {
    flex-direction: row;
  }
}

.imageWrapper {
  min-height: 10rem;
  position: relative;
  transition: background-color 0.1s linear;
  user-select: none;
  max-height: 18rem;
  overflow: hidden;
  background-color: var(--body-bg);
  background-image:
    linear-gradient(45deg, var(--component-bg) 25%, transparent 25%),
    linear-gradient(-45deg, var(--component-bg) 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, var(--component-bg) 75%),
    linear-gradient(-45deg, transparent 75%, var(--component-bg) 75%);
  background-size: 20px 20px;
  background-position: 0 0, 0 10px, 10px -10px, -10px 0;

  @media (--screen-medium) {
    min-height: 12rem;
    max-height: 27rem;
    flex-basis: 30%;
    height: auto;

    @nest .noContent & {
      flex-basis: 100%;
    }
  }
}

.imageWrapperEmpty {
  composes: imageWrapper;
}

.content {
  margin-top: 1rem;
  margin-left: 1rem;
  flex-grow: 1;

  @media (--screen-medium) {
    flex-basis: 30%;
  }
}

.contentAbsolute {
  position: absolute;
  display: block;
}

.progressContainer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  background-color: color(var(--gray-lightest) a(0.7));

  @nest .error & {
    background-color: color(var(--state-danger-color) a(0.7));
  }
}

.progressContainerComplete {
  composes: progressContainer;
  animation-name: complete;
  animation-duration: 0.5s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

.progressInner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  z-index: 2;
}

.image {
  display: block;
  position: relative;
  width: 100%;
  height: 100%;
}

.imagePreviewError {
  display: inline-block;
  margin-top: 3%;
  width: 100%;
  text-align: center;
}

.imageIsUploaded {
  composes: image;
}

.imageIsNotUploaded {
  composes: image;
  overflow: hidden;
}

.imageSelect {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  cursor: default;
  z-index: 1;
  user-select: none;
}

.imageSelectReplace {
  composes: imageSelect;
  background-color: transparent;
}

.functions {
  position: absolute;
  bottom: var(--small-padding);
  right: var(--small-padding);
  font-size: 0.8rem;
  z-index: 1;
}

.cancel {
  cursor: pointer;
  color: var(--state-danger-color);
  position: absolute;
  top: 50%;
  margin-top: 3rem;
  z-index: 1;
  text-align: center;
  width: 100%;
  font-size: 0.8em;
}

.errorMessage {
  composes: cancel;
  color: var(--component-bg);
  cursor: default;

  @nest & span {
    text-decoration: underline;
    cursor: pointer;
  }
}

.uploadInner {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);

  @nest .imageSelectReplace & {
    filter: drop-shadow(0 0 5px var(--black));
  }
}

.uploadIcon {
  display: block;
  font-size: 2em;
  width: 100%;
  margin-bottom: var(--small-padding);

  @nest & svg {
    font-size: 2em;
    width: 100%;
  }
}

/* Image select hack */
.replaceImageButton {
  position: relative;

  @nest .hasContent & {
    @nest & span {
      margin-left: 0;
    }
  }
}

.ghost {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

.replaceImageSelect {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}
