@import "part:@sanity/base/theme/variables-style";

:root {
  --button-inverted-color: var(--text-color);
  --button-focus-shadow: 0 0 0 3px color(var(--input-border-color-focus) a(50%));
  --button-focus-shadow--danger: 0 0 0 3px color(var(--state-danger-color) a(50%));
  --button-focus-shadow--success: 0 0 0 3px color(var(--state-success-color) a(50%));
  --button-focus-shadow--warning: 0 0 0 3px color(var(--state-warning-color) a(50%));
}

@keyframes focused {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.05);
  }

  100% {
    transform: scale(1);
  }
}

.spacing {
  display: inline-flex;
}

.spacing + .spacing {
  margin-left: var(--small-padding);
}

.borderRadius {
  border-radius: var(--button-border-radius);
}

.root {
  -webkit-font-smoothing: inherit;
  appearance: none;
  composes: spacing;
  composes: borderRadius;
  display: inline-flex;
  vertical-align: middle;
  justify-content: stretch;
  margin: 0;
  position: relative;
  outline: none;
  border: none;
  color: inherit;
  font-weight: inherit;
  font-size: 1em;
  line-height: 1.25;
  font-family: inherit;
  user-select: none;
  transition: border-color 0.15s, background-color 0.15s, color 0.15s, opacity 0.15s, box-shadow 0.1s;
  text-decoration: none;
  padding: 0;
}

.groupContainer {
  @nest & .borderRadius:not(:last-child):not(:first-child) {
    border-radius: 0;
  }

  @nest & .borderRadius:not(:last-child) {
    border-right: 1px solid color(var(--body-bg) a(30%));
  }

  @nest & .inverted:not(:last-child) {
    border-right: none;

    @nest &:hover {
      border-right: 1px solid currentColor;
    }

    @nest &:hover + .inverted {
      border-left: none;
    }
  }

  @nest & .borderRadius:first-child:not(:last-child) {
    border-radius: var(--button-border-radius) 0 0 var(--button-border-radius);
  }

  @nest & .borderRadius:last-child:not(:first-child) {
    border-radius: 0 var(--button-border-radius) var(--button-border-radius) 0;
  }

  @nest & .borderRadius + .borderRadius {
    margin: 0;
  }
}

.root.bleed {
  padding: 0 !important;
  display: flex;
  border-radius: 0;
  height: 100%;

  @nest & .content {
    margin: 0;
  }
}

span.inner {
  outline: none;
  display: flex;
  justify-self: stretch;
  justify-content: stretch;
  align-items: stretch;
  width: stretch;
}

span.content {
  display: flex;
  align-items: center;
  justify-content: center;
  width: stretch;
}

.icon {
  display: flex;
  margin-right: var(--small-padding);

  @nest & > svg { display: block; }
}

.root:focus {
  box-shadow: var(--button-focus-shadow);

  @nest & .content {
    animation-name: focused;
    animation-duration: 0.2s;
  }
}

/* Handles fileupload buttons with focus-within */
.root:not(:focus):focus-within .inner:not(:focus) {
  box-shadow: var(--button-focus-shadow);
  border-radius: var(--button-border-radius);
}

.root:not(:focus):focus-within .inner:not(:focus) .content {
  animation-name: focused;
  animation-duration: 0.2s;
}

.onlyIcon {
  @nest & .content {
    margin: 0.6875em 0.6875em !important;
  }

  @nest & .icon {
    margin-right: 0;
  }
}

.padding_default {
  @nest & .content {
    @nest :not(.onlyIcon) & {
      margin: 0.5625em 0.8125rem;
    }
  }
}

.padding_small {
  @nest & .content {
    @nest :not(.onlyIcon) & {
      margin: 0.7em;

      @media (--screen-medium) {
        margin: 0.5em 0.6em;
      }
    }
  }
}

.padding_none.bleed.onlyIcon .content {
  margin: 0 !important;
}

.default {
  composes: root;
  background-color: var(--default-button-color);
  color: var(--default-button-color--inverted);
  border: 1px solid var(--default-button-color);

  @nest & .spinner {
    background-color: var(--default-button-color);
  }

  @nest &:not(.disabled) {
    @media (hover: hover) {
      @nest &:hover {
        background-color: color(var(--default-button-color) lightness(+ 5%));
      }
    }

    @nest &:active {
      background-color: var(--default-button-color--active);
      outline: 0;
    }
  }
}

.simple {
  composes: root;
  border: 1px solid transparent !important;
  background-color: transparent;

  @nest & .spinner {
    background-color: var(--white);
  }

  @media (hover: hover) {
    @nest &:not(.disabled):hover {
      background-color: color(var(--default-button-color) a(90%));
    }
  }

  @nest &:not(.disabled) {
    @media (hover: hover) {
      @nest &:hover {
        background-color: color(var(--default-button-color) a(5%));
      }
    }

    @nest &:active {
      background-color: color(var(--default-button-color) lightness(+ 10%) a(10%));
      outline: 0;
    }
  }
}

.inverted {
  color: var(--default-button-color);
  border: 1px solid color(var(--default-button-color) a(35%));
  background-color: transparent;
  box-shadow: none;
  composes: default;

  @nest & .spinner {
    background-color: var(--white);
  }

  @media (hover: hover) {
    @nest &:not(.disabled):hover {
      border-color: color(var(--default-button-color) a(70%));
      background-color: color(var(--default-button-color) a(5%));
    }
  }

  @nest &.root:focus {
    border-color: color(var(--default-button-color) a(70%));
    box-shadow: var(--button-focus-shadow);
  }
}

.secondary {
  composes: inverted;
}

.color__primary {
  border-color: var(--default-button-primary-color);
  background-color: var(--default-button-primary-color);
  color: var(--brand-primary--inverted);

  @media (hover: hover) {
    @nest &:not(.disabled):hover {
      border-color: var(--default-button-primary-color);
      background-color: color(var(--default-button-primary-color) lightness(+ 5%));
    }
  }

  @nest & .spinner {
    color: var(--brand-primary--inverted);
    background-color: var(--default-button-primary-color);
  }

  @nest &.root:focus {
    border-color: var(--default-button-primary-color);
  }

  @nest &.inverted {
    border-color: color(var(--brand-primary) a(50%));
    background-color: transparent;
    color: var(--default-button-primary-color);

    @nest &.root:focus {
      border-color: var(--brand-primary);
    }

    @nest & .spinner {
      background-color: var(--default-button-primary-color--inverted);
      color: var(--default-button-primary-color);
    }

    @media (hover: hover) {
      @nest &:not(.disabled):hover {
        border-color: var(--default-button-primary-color);
        background-color: color(var(--brand-primary) a(5%));
      }
    }
  }

  @nest &.simple {
    background-color: transparent;
    color: var(--default-button-primary-color);

    @media (hover: hover) {
      @nest &:not(.disabled) {
        @nest &:hover {
          background-color: color(var(--brand-primary) a(5%));
          border-color: var(--brand-primary);
        }
      }
    }
  }
}

.color__danger {
  border-color: var(--default-button-danger-color);
  background-color: var(--default-button-danger-color);
  color: var(--default-button-danger-color--inverted);

  @nest & .spinner {
    background-color: var(--default-button-danger-color);
    color: var(--default-button-danger-color--inverted);
  }

  @nest &.root:focus {
    border-color: var(--state-danger-color);
    box-shadow: var(--button-focus-shadow--danger);
  }

  @media (hover: hover) {
    @nest &:not(.disabled):hover {
      background-color: color(var(--default-button-danger-color) lightness(+ 5%));
    }
  }

  @nest &.inverted {
    border-color: color(var(--state-danger-color) a(50%));
    background-color: transparent;
    color: var(--default-button-danger-color);

    @nest & .spinner {
      background-color: var(--default-button-danger-color--inverted);
      color: var(--default-button-danger-color);
    }

    @media (hover: hover) {
      @nest &:not(.disabled) {
        @nest &:hover {
          background-color: color(var(--state-danger-color) a(5%));
          border-color: var(--state-danger-color);
        }
      }
    }
  }

  @nest &.simple {
    background-color: transparent;
    color: var(--default-button-danger-color);

    @media (hover: hover) {
      @nest &:not(.disabled) {
        @nest &:hover {
          background-color: color(var(--state-danger-color) a(5%));
        }
      }
    }
  }
}

.color__success {
  border-color: var(--default-button-success-color);
  background-color: var(--default-button-success-color);
  color: var(--default-button-success-color--inverted);

  @nest & .spinner {
    background-color: var(--default-button-success-color);
    color: var(--state-success-color--inverted);
  }

  @nest &.root:focus {
    border-color: var(--state-success-color);
    box-shadow: var(--button-focus-shadow--success);
  }

  @media (hover: hover) {
    @nest &:not(.disabled):hover {
      background-color: color(var(--default-button-success-color) lightness(+ 5%));
    }
  }

  @nest &.inverted {
    border-color: color(var(--state-success-color) a(50%));
    background-color: transparent;
    color: var(--default-button-success-color);

    @nest & .spinner {
      background-color: var(--white);
      color: var(--default-button-success-color);
    }

    @media (hover: hover) {
      @nest &:not(.disabled):hover {
        background-color: color(var(--state-success-color) a(5%));
        border-color: var(--default-button-success-color);
      }
    }
  }

  @nest &.simple {
    background-color: transparent;
    color: var(--state-success-color);

    @media (hover: hover) {
      @nest &:not(.disabled):hover {
        background-color: color(var(--state-success-color) a(5%));
      }
    }
  }
}

.color__warning {
  border-color: var(--default-button-warning-color);
  background-color: var(--default-button-warning-color);
  color: var(--default-button-warning-color--inverted);

  @nest & .spinner {
    background-color: var(--default-button-warning-color);
    color: var(--state-warning-color--inverted);
  }

  @nest &.root:focus {
    border-color: var(--state-warning-color);
    box-shadow: var(--button-focus-shadow--warning);
  }

  @media (hover: hover) {
    @nest &:not(.disabled):hover {
      background-color: color(var(--default-button-warning-color) lightness(+ 5%));
    }
  }

  @nest &.inverted {
    border-color: color(var(--state-warning-color) a(50%));
    background-color: transparent;
    color: var(--default-button-warning-color);

    @nest & .spinner {
      background-color: var(--white);
      color: var(--default-button-warning-color);
    }

    @media (hover: hover) {
      @nest &:not(.disabled):hover {
        background-color: color(var(--state-warning-color) a(5%));
        border-color: var(--default-button-warning-color);
      }
    }
  }

  @nest &.simple {
    background-color: transparent;
    color: var(--state-warning-color);

    @media (hover: hover) {
      @nest &:not(.disabled):hover {
        background-color: color(var(--state-warning-color) a(5%));
      }
    }
  }
}

.color__white {
  border-color: var(--white);
  background-color: var(--white);
  color: var(--text-color);

  @nest &.root:focus {
    outline-color: var(--white);
  }

  @nest & .spinner {
    background-color: var(--white);
  }

  @media (hover: hover) {
    @nest &:not(.disabled):hover {
      background-color: color(var(--white) lightness(- 5%));
    }
  }

  @nest &.inverted {
    border-color: var(--white);
    background-color: transparent;
    color: var(--white);

    @nest & .spinner {
      background-color: var(--white);
      color: var(--text-color);
    }

    @nest &:not(.disabled) {
      @nest &:focus {
        outline-color: var(--white);
        border-color: var(--white);
      }

      @media (hover: hover) {
        @nest &:hover {
          background-color: color(var(--white) a(40%));
          color: var(--white);
        }
      }
    }
  }

  @nest &.simple {
    border-color: transparent;
    background-color: transparent;
    color: var(--white);

    @nest & .spinner {
      background-color: var(--white);
      color: var(--text-color);
    }

    @media (hover: hover) {
      @nest &:not(.disabled):hover {
        background-color: color(var(--white) a(40%));
        color: var(--white);
      }
    }
  }
}

.save {
  composes: root;
}

.spinner {
  position: absolute;
  z-index: 1;
  display: flex;
  width: 100%;
  top: 0;
  left: 0;
  height: 100%;
  align-items: center;
  justify-content: center;
  opacity: 0.9;
}

.disabled {
  opacity: 0.2;
}
