@import 'part:@sanity/base/theme/variables-style';

@keyframes fade {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.root {
  composes: default from './Spacing.css';
  width: 100%;
}

.previewContainer {
  width: 100%;
  display: block;
  cursor: move;
  position: relative;
  border-radius: var(--form-builder-block-border-radius);
  border: 1px solid var(--form-builder-block-border-color);
  box-shadow: var(--form-builder-block-shadow);
  box-sizing: border-box;
  overflow: hidden;
  min-height: 3.5rem;

  @nest &:hover {
    background-color: var(--form-builder-block-background-hover);
    box-shadow: var(--form-builder-block-shadow--hover);
  }
}

.root.hasErrors > .previewContainer {
  box-shadow: var(--form-builder-block-shadow--invalid);
}

.root.focused > .previewContainer {
  border: 1px solid var(--form-builder-block-border-color-focus);
  background-color: var(--selectable-item-color-active);
  box-shadow: var(--form-builder-block-shadow--focus);
}

.root.selected:not(.focused) > .previewContainer {
  background-color: var(--form-builder-block-background-selected);
}

.root.focused.selected > .previewContainer {
  border: 1px solid var(--form-builder-block-border-color-focus);
}

.root.selected.hasErrors > .previewContainer {
  box-shadow: none;
  border: 1px solid
    color(var(--state-danger-color) blend(var(--form-builder-block-background-selected) 70%));
}

.root.focused.hasErrors > .previewContainer {
  box-shadow: var(--form-builder-block-shadow--invalid-focus);
  background-color: color(var(--state-danger-color) a(25%));
  border: 1px solid var(--state-danger-color);
}

.root.focused.hasErrors > .previewContainer:hover {
  background-color: color(var(--state-danger-color) a(45%));
}

.header {
  z-index: 1;
  position: absolute;
  top: var(--small-padding);
  right: var(--small-padding);
  display: none;
  opacity: 0;

  @nest .focused & {
    display: block !important;
    opacity: 1 !important;
  }
}

.preview {
  @media (hover: hover) {
    @nest &:hover .header {
      display: block;
      opacity: 1;
    }
  }
}

.type {
  display: block;
  text-transform: uppercase;
  opacity: 1;
  padding-right: var(--small-padding);
}

.validationStatus {
  display: flex;
  align-items: center;
  padding-right: var(--small-padding);
}

.linkToReference {
  display: flex;
  align-items: center;
  transition: transform 0.1s linear, opacity 0.1s linear;
  margin-right: var(--small-padding);

  @nest &:hover {
    opacity: 1;
    color: var(--link-color);

    @nest & svg {
      color: var(--link-color);
    }
  }

  @nest &:active {
    opacity: 1;
    color: var(--text-color);

    @nest & svg {
      color: var(--text-color);
    }
  }

  @nest & svg {
    color: var(--text-color);
  }
}

.isDragging {
  opacity: 0.15;
}

.functions {
  display: flex;
}

.menuContainer {
  position: absolute;
}

.menuItem {
  display: flex;
  align-items: center;
  user-select: none;
}

.menuItemDanger {
  composes: menuItem;
  color: var(--state-danger-color);
}
