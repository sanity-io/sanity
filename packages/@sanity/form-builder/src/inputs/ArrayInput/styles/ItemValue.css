@import 'part:@sanity/base/theme/variables-style';

.root {
  position: relative;
}

.inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.innerWithError {
  composes: inner;
}

.listItem {
  composes: root;
}

.gridItem {
  composes: root;
}

.popupAnchor {
  /*
    This is where the popover sticks to
  */
  position: absolute;
  top: 0%;
  left: 0%;
  width: 100%;
  height: 100%;
  background-color: var(--selectable-item-color-highlighted);
}

.editRootFold {
  position: relative;
  width: calc(100% + var(--medium-padding) * 2);
  margin-left: calc(var(--medium-padding) * -1);
}

.missingKeyMessage {
  color: var(--state-warning-color);
  position: absolute;
  top: 1px;
  right: 1px;
  z-index: 200;
  padding: 0.2em 0.4em;
  background-color: var(--input-bg);
}

.dragHandle {
  display: block;
  flex-grow: 0;
  margin-right: var(--extra-small-padding);

  @nest & > button {
    cursor: ns-resize;
  }
}

.linkToReference {
}

.previewWrapper {
  composes: listItemStates from 'part:@sanity/base/theme/layout/backgrounds-style';
  flex-grow: 1;
  outline: none;
  user-select: none;
  min-width: 0;

  @nest &:focus {
    box-shadow: var(--input-box-shadow--focus);
  }
}

.previewWrapperHelper {
  outline: none;
}

.previewWrapperHelper:focus {
  @nest .innerWithError & {
    box-shadow: var(--input-box-shadow--invalid-focus);
  }
}

.functions {
  display: flex;
  align-items: center;
  flex-grow: 0;
  color: var(--text-color-secondary);
  margin-left: var(--extra-small-padding);
}

.functionsInGrid {
  composes: functions;
  background-color: color(var(--component-bg) a(70%));
  position: absolute;
  top: var(--small-padding);
  right: var(--small-padding);
  font-size: var(--font-size-tiny);
  border-radius: var(--border-radius-base);
  z-index: 1;
  color: var(--text-color);

  @nest & > * {
    margin: 0;
  }
}

.validationIconError {
  composes: validationIconError from 'part:@sanity/base/theme/forms/validation-style';
}
