/* stylelint-disable no-descending-specificity */
@import 'part:@sanity/base/theme/variables-style';

.root {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}

.splitContainer {
  flex-grow: 1;
  box-sizing: border-box;
  position: relative;
}

.header {
  border-bottom: 1px solid #c1c2c5;
}

.grid {
  height: 100%;
}

.resultContainer {
  position: absolute;
  height: 100%;
  width: 100%;
  max-width: 100%;
  overflow: hidden;
}

.result {
  position: relative;
  height: 100%;
  width: 100%;
  overflow: auto;
  padding: var(--medium-padding);
  background-color: var(--white);
  box-sizing: border-box;
}

.noResult {
  padding: var(--large-padding);
  font-size: 1.2em;
}

.edit {
  box-sizing: border-box;
  position: relative;
  height: 100%;
  width: 100%;
}

.inputContainer {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}

.edit :global(.Pane) {
  overflow: hidden;
}

.inputLabelQuery {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 0;
  margin: 0;
  letter-spacing: 0.1em;
  font-weight: 100;
  text-transform: uppercase;
  font-size: 2rem;
  opacity: 0.2;
  z-index: 10;
  pointer-events: none;
}

.inputLabelParams {
  width: 30%;
}

.textarea {
  composes: textarea from 'part:@sanity/components/textareas/default-style';
  font-family: Consolas, monospace;
}

.editor {
  width: 100%;
  box-sizing: border-box;
  height: 100%;
  overflow: hidden;
  position: relative;
}

.queryEditor {
  composes: editor;
}

.paramsEditor {
  composes: editor;
}

.paramsEditorInvalid {
  composes: paramsEditor;
  background: color(var(--state-danger-color) a(20%));
  width: 100%;
}

.queryUrlCopy {
  cursor: pointer;
  margin-right: auto;
}

/* Splitpane */

.root :global(.Resizer) {
  background: #000;
  opacity: 0.2;
  z-index: 1;
  box-sizing: border-box;
  background-clip: padding-box;
}

.root :global(.Resizer:hover) {
}

.root :global(.Resizer.horizontal) {
  height: 11px;
  margin: -5px 0;
  border-top: 5px solid rgba(255, 255, 255, 0);
  border-bottom: 5px solid rgba(255, 255, 255, 0);
  cursor: row-resize;
  width: 100%;
}

.root :global(.Resizer.horizontal:hover) {
  border-top: 5px solid rgba(0, 0, 0, 0.5);
  border-bottom: 5px solid rgba(0, 0, 0, 0.5);
}

.root :global(.Resizer.vertical) {
  width: 11px;
  margin: 0 -5px;
  border-left: 5px solid rgba(255, 255, 255, 0);
  border-right: 5px solid rgba(255, 255, 255, 0);
  cursor: col-resize;
}

.root :global(.Resizer.vertical:hover) {
  border-left: 5px solid rgba(0, 0, 0, 0.5);
  border-right: 5px solid rgba(0, 0, 0, 0.5);
}

.root :global(.Resizer.disabled) {
  cursor: not-allowed;
}

.root :global(.Resizer.disabled:hover) {
  border-color: transparent;
}

/* CodeMirror additional styling */
.root :global(.CodeMirror) {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
}
